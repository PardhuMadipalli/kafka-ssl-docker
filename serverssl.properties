# MODIFY this is to a different ID if a broker with ID 101 already exists
broker.id=101

# MODIFY this to change zookeeper. Deafult is localhost
zookeeper.connect=localhost:2181

# Listeners to be used. Both PLAINTEXT and SSL are being configured.
listeners=SSL://:9093,PLAINTEXT://:9094

# Advertised listeners. This is how your docker kafka broker looks to the outside world.
advertised.listeners=SSL://<WEBSITE>:9093,PLAINTEXT://localhost:9094

# Maps listener names to security protocols.
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL

# SSL Properties. The placeholder variables such a as <DIRNAME> and <PASSWORD> will be assigned proper values when running the script.
ssl.keystore.location=<KEYSTORELOCATION>
ssl.keystore.password=<PASSWORD>
ssl.key.password=<PASSWORD>
ssl.client.auth=none
ssl.keystore.type=JKS
ssl.endpoint.identification.algorithm=


# The number of threads that the server uses for receiving requests from the network and sending responses to the network
num.network.threads=3

# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=8

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600

log.dirs=/tmp/kafka-logs-ssl

num.partitions=1

num.recovery.threads.per.data.dir=1

offsets.topic.replication.factor=1

transaction.state.log.replication.factor=1

transaction.state.log.min.isr=1

log.retention.hours=168

log.segment.bytes=1073741824

log.retention.check.interval.ms=300000

zookeeper.connection.timeout.ms=6000

group.initial.rebalance.delay.ms=0
